server:
  port: 8080

spring:
  application:
    name: subscribermanagement
---

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        ddl-auto: create
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: subscribermanagement
#<<< EDA / Topic Name
          destination: miniprojectver
#>>> EDA / Topic Name
          contentType: application/json
        event-out:
#<<< EDA / Topic Name
          destination: miniprojectver
#>>> EDA / Topic Name
          contentType: application/json

# logging:
#   level:
#     org.hibernate.type: trace
#     org.springframework.cloud: debug
logging:
  level:
    root: INFO
    # org.springframework: DEBUG
    org.hibernate: TRACE # Hibernate의 SQL 바인딩 로그를 가장 자세히 확인
    # miniprojectver: DEBUG # 당신의 애플리케이션 패키지 로그도 DEBUG로 설정


server:
  port: 8086

---

spring:
  profiles: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: subscribermanagement
          destination: miniprojectver
          contentType: application/json
        event-out:
          destination: miniprojectver
          contentType: application/json


