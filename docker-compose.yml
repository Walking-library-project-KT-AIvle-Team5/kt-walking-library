version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper


# version: '3' # 최신 버전을 사용하도록 권장합니다.

# services:
#   zookeeper:
#     image: wurstmeister/zookeeper
#     ports:
#       - "2181:2181"

#   kafka:
#     image: wurstmeister/kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#     depends_on:
#       - zookeeper

#   # --- 마이크로서비스 정의 추가 시작 ---

#   auth:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # Gitpod 환경에서는 localhost 대신 내부 서비스 이름 사용
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#       # Spring Boot application.properties/yml에서 Kafka 브로커 설정 확인 필요
#     command: mvn spring-boot:run
#     ports:
#       - 8082:8082
#     working_dir: /usr/src
#     volumes:
#       - ./auth:/usr/src
#       - ./maven-repo:/root/.m2

#   dashboard:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8083:8083
#     working_dir: /usr/src
#     volumes:
#       - ./dashboard:/usr/src
#       - ./maven-repo:/root/.m2

#   bookmanagement:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8084:8084
#     working_dir: /usr/src
#     volumes:
#       - ./bookmanagement:/usr/src
#       - ./maven-repo:/root/.m2

#   pointmanagement:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8085:8085
#     working_dir: /usr/src
#     volumes:
#       - ./pointmanagement:/usr/src
#       - ./maven-repo:/root/.m2

#   subscribermanagement:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # 카프카 브로커 주소를 서비스 이름으로 지정해야 합니다 (kafka:9092)
#       # 실제 Spring Boot 애플리케이션의 application.yml/properties에서
#       # spring.kafka.bootstrap-servers=kafka:9092 로 설정되어 있어야 합니다.
#       # 만약 설정되어 있지 않다면 아래 환경 변수를 추가할 수 있습니다.
#       # - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8086:8086
#     working_dir: /usr/src
#     volumes:
#       - ./subscribermanagement:/usr/src
#       - ./maven-repo:/root/.m2

#   libraryplatform:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8087:8087
#     working_dir: /usr/src
#     volumes:
#       - ./libraryplatform:/usr/src
#       - ./maven-repo:/root/.m2

#   authormanagement:
#     depends_on:
#       - kafka
#     image: adoptopenjdk/maven-openjdk11:latest
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       # - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#     command: mvn spring-boot:run
#     ports:
#       - 8090:8090
#     working_dir: /usr/src
#     volumes:
#       - ./authormanagement:/usr/src
#       - ./maven-repo:/root/.m2

#   # --- 마이크로서비스 정의 추가 끝 ---
