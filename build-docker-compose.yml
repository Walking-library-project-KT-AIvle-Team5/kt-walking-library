version: '2'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: my-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://my-kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    command: >
      bash -c "/etc/confluent/docker/run"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/29092"]
      interval: 10s
      timeout: 5s
      retries: 10

  auth:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8082:8082
    working_dir: /usr/src
    volumes:
      - ./auth:/usr/src
      - ./maven-repo:/root/.m2

  dashboard:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8083:8083
    working_dir: /usr/src
    volumes:
      - ./dashboard:/usr/src
      - ./maven-repo:/root/.m2

  bookmanagement:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    # command: [ "tail", "-f", "/dev/null" ]
    ports:
      - 8084:8084
    working_dir: /usr/src
    volumes:
      - ./bookmanagement:/usr/src
      - ./maven-repo:/root/.m2

  pointmanagement:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8085:8085
    working_dir: /usr/src
    volumes:
      - ./pointmanagement:/usr/src
      - ./maven-repo:/root/.m2

  subscribermanagement:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8086:8086
    working_dir: /usr/src
    volumes:
      - ./subscribermanagement:/usr/src
      - ./maven-repo:/root/.m2

  libraryplatform:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8087:8087
    working_dir: /usr/src
    volumes:
      - ./libraryplatform:/usr/src
      - ./maven-repo:/root/.m2

  authormanagement:
    image: adoptopenjdk/maven-openjdk11:latest
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    command: mvn spring-boot:run
    ports:
      - 8088:8088
    working_dir: /usr/src
    volumes:
      - ./authormanagement:/usr/src
      - ./maven-repo:/root/.m2
